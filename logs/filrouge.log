2021-09-20 13:39:14,675 INFO o.s.b.StartupInfoLogger [main] Starting RestaurantCoreApplication using Java 1.8.0_241 on LAPTOP-FBCSQ0O4 with PID 3908 (C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main started by formation in C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back)
2021-09-20 13:39:14,692 INFO o.s.b.SpringApplication [main] No active profile set, falling back to default profiles: default
2021-09-20 13:39:15,624 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.
2021-09-20 13:39:15,635 DEBUG o.s.d.r.c.RepositoryConfigurationDelegate [main] Scanning for MongoDB repositories in packages com.filrouge.restaurantcore.
2021-09-20 13:39:15,663 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IAddressRepository.class]
2021-09-20 13:39:15,663 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IBookingRepository.class]
2021-09-20 13:39:15,663 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\ICoordinatesRepository.class]
2021-09-20 13:39:15,663 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IIngredientRecipeRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IIngredientRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IOrderRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IPurchaseRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IRecipeRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IRestaurantRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IRoleRepository.class]
2021-09-20 13:39:15,667 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IStockRepository.class]
2021-09-20 13:39:15,671 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\ITableRepository.class]
2021-09-20 13:39:15,671 DEBUG o.s.c.a.ClassPathScanningCandidateComponentProvider [main] Identified candidate component class: file [C:\Users\formation\Documents\Workspace\fil-rouge\restaurant-back\bin\main\com\filrouge\restaurantcore\dao\IUserRepository.class]
2021-09-20 13:39:15,841 INFO o.s.d.r.c.RepositoryConfigurationDelegate [main] Finished Spring Data repository scanning in 205 ms. Found 13 MongoDB repository interfaces.
2021-09-20 13:39:16,497 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat initialized with port(s): 8080 (http)
2021-09-20 13:39:16,517 INFO o.a.j.l.DirectJDKLog [main] Initializing ProtocolHandler ["http-nio-8080"]
2021-09-20 13:39:16,517 INFO o.a.j.l.DirectJDKLog [main] Starting service [Tomcat]
2021-09-20 13:39:16,517 INFO o.a.j.l.DirectJDKLog [main] Starting Servlet engine: [Apache Tomcat/9.0.52]
2021-09-20 13:39:16,620 INFO o.a.j.l.DirectJDKLog [main] Initializing Spring embedded WebApplicationContext
2021-09-20 13:39:16,620 INFO o.s.b.w.s.c.ServletWebServerApplicationContext [main] Root WebApplicationContext: initialization completed in 1861 ms
2021-09-20 13:39:16,949 INFO c.m.d.l.SLF4JLogger [main] Cluster created with settings {hosts=[127.0.0.1:27017], srvHost=cluster-poei.e7l00.mongodb.net, mode=MULTIPLE, requiredClusterType=REPLICA_SET, serverSelectionTimeout='30000 ms', requiredReplicaSetName='atlas-iiz451-shard-0'}
2021-09-20 13:39:17,055 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-srv-cluster-poei.e7l00.mongodb.net] Adding discovered server cluster-poei-shard-00-00.e7l00.mongodb.net:27017 to client view of cluster
2021-09-20 13:39:17,088 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-srv-cluster-poei.e7l00.mongodb.net] Adding discovered server cluster-poei-shard-00-01.e7l00.mongodb.net:27017 to client view of cluster
2021-09-20 13:39:17,092 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-srv-cluster-poei.e7l00.mongodb.net] Adding discovered server cluster-poei-shard-00-02.e7l00.mongodb.net:27017 to client view of cluster
2021-09-20 13:39:17,112 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Locale to class java.lang.String as writing converter.
2021-09-20 13:39:17,112 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Character to class java.lang.String as writing converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigDecimal to class java.lang.String as writing converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigDecimal to class org.bson.types.Decimal128 as writing converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.math.BigDecimal as reading converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.types.Decimal128 to class java.math.BigDecimal as reading converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigInteger to class java.lang.String as writing converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.math.BigInteger as reading converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.net.URL to class java.lang.String as writing converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.net.URL as reading converter.
2021-09-20 13:39:17,116 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class java.lang.String as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.query.Term to class java.lang.String as writing converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.script.NamedMongoScript to class org.bson.Document as writing converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.script.NamedMongoScript as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Currency to class java.lang.String as writing converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.util.Currency as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.concurrent.atomic.AtomicInteger to class java.lang.Integer as writing converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.concurrent.atomic.AtomicLong to class java.lang.Long as writing converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Long to class java.util.concurrent.atomic.AtomicLong as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Integer to class java.util.concurrent.atomic.AtomicInteger as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.types.Binary to class [B as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.BsonTimestamp to class java.time.Instant as reading converter.
2021-09-20 13:39:17,120 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.net.URI as reading converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.net.URI to class java.lang.String as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Box to class org.bson.Document as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Polygon to class org.bson.Document as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Circle to class org.bson.Document as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.Sphere to class org.bson.Document as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Box as reading converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Polygon as reading converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Circle as reading converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.Sphere as reading converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Point as reading converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Point to class org.bson.Document as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.query.GeoCommand to class org.bson.Document as writing converter.
2021-09-20 13:39:17,124 DEBUG o.s.d.c.CustomConversions [main] Adding converter from interface org.springframework.data.mongodb.core.geo.GeoJson to class org.bson.Document as writing converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPoint to class org.bson.Document as writing converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPolygon to class org.bson.Document as writing converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPoint as reading converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPolygon as reading converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonLineString as reading converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString as reading converter.
2021-09-20 13:39:17,129 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonGeometryCollection as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to interface org.springframework.data.mongodb.core.geo.GeoJson as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Skipping converter from class java.time.LocalDateTime to class java.time.Instant as reading converter. class java.time.LocalDateTime is not a store supported simple type!
2021-09-20 13:39:17,133 DEBUG o.s.d.c.CustomConversions [main] Skipping converter from class java.time.Instant to class java.time.LocalDateTime as reading converter. class java.time.Instant is not a store supported simple type!
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Period to class java.lang.String as writing converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Period as reading converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2021-09-20 13:39:17,137 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Locale to class java.lang.String as writing converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Character to class java.lang.String as writing converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigDecimal to class java.lang.String as writing converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigDecimal to class org.bson.types.Decimal128 as writing converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.math.BigDecimal as reading converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.types.Decimal128 to class java.math.BigDecimal as reading converter.
2021-09-20 13:39:17,393 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigInteger to class java.lang.String as writing converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.math.BigInteger as reading converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.net.URL to class java.lang.String as writing converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.net.URL as reading converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class java.lang.String as reading converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.query.Term to class java.lang.String as writing converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.script.NamedMongoScript to class org.bson.Document as writing converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.script.NamedMongoScript as reading converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Currency to class java.lang.String as writing converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.util.Currency as reading converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.concurrent.atomic.AtomicInteger to class java.lang.Integer as writing converter.
2021-09-20 13:39:17,396 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.concurrent.atomic.AtomicLong to class java.lang.Long as writing converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Long to class java.util.concurrent.atomic.AtomicLong as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Integer to class java.util.concurrent.atomic.AtomicInteger as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.types.Binary to class [B as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.BsonTimestamp to class java.time.Instant as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.net.URI as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.net.URI to class java.lang.String as writing converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Box to class org.bson.Document as writing converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Polygon to class org.bson.Document as writing converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Circle to class org.bson.Document as writing converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.Sphere to class org.bson.Document as writing converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Box as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Polygon as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Circle as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.Sphere as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Point as reading converter.
2021-09-20 13:39:17,399 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Point to class org.bson.Document as writing converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.query.GeoCommand to class org.bson.Document as writing converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from interface org.springframework.data.mongodb.core.geo.GeoJson to class org.bson.Document as writing converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPoint to class org.bson.Document as writing converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPolygon to class org.bson.Document as writing converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPoint as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPolygon as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonLineString as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonGeometryCollection as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to interface org.springframework.data.mongodb.core.geo.GeoJson as reading converter.
2021-09-20 13:39:17,403 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2021-09-20 13:39:17,407 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2021-09-20 13:39:17,407 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2021-09-20 13:39:17,407 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2021-09-20 13:39:17,407 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Skipping converter from class java.time.LocalDateTime to class java.time.Instant as reading converter. class java.time.LocalDateTime is not a store supported simple type!
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Skipping converter from class java.time.Instant to class java.time.LocalDateTime as reading converter. class java.time.Instant is not a store supported simple type!
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Period to class java.lang.String as writing converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Period as reading converter.
2021-09-20 13:39:17,408 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2021-09-20 13:39:17,410 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2021-09-20 13:39:17,410 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2021-09-20 13:39:17,434 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.User for index information.
2021-09-20 13:39:17,443 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Table for index information.
2021-09-20 13:39:17,443 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Order for index information.
2021-09-20 13:39:17,443 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Coordinates for index information.
2021-09-20 13:39:17,446 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Address for index information.
2021-09-20 13:39:17,447 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Restaurant for index information.
2021-09-20 13:39:17,447 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Purchase for index information.
2021-09-20 13:39:17,450 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Booking for index information.
2021-09-20 13:39:17,450 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Role for index information.
2021-09-20 13:39:17,483 INFO c.m.d.l.SLF4JLogger [main] No server chosen by com.mongodb.client.internal.MongoClientDelegate$1@1c26273d from cluster description ClusterDescription{type=REPLICA_SET, connectionMode=MULTIPLE, serverDescriptions=[ServerDescription{address=cluster-poei-shard-00-01.e7l00.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, ServerDescription{address=cluster-poei-shard-00-02.e7l00.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}, ServerDescription{address=cluster-poei-shard-00-00.e7l00.mongodb.net:27017, type=UNKNOWN, state=CONNECTING}]}. Waiting for 30000 ms before timing out
2021-09-20 13:39:18,093 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-01.e7l00.mongodb.net:27017] Opened connection [connectionId{localValue:5, serverValue:1599}] to cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:18,093 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-02.e7l00.mongodb.net:27017] Opened connection [connectionId{localValue:3, serverValue:1285}] to cluster-poei-shard-00-02.e7l00.mongodb.net:27017
2021-09-20 13:39:18,093 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-00.e7l00.mongodb.net:27017] Opened connection [connectionId{localValue:4, serverValue:1636}] to cluster-poei-shard-00-00.e7l00.mongodb.net:27017
2021-09-20 13:39:18,093 INFO c.m.d.l.SLF4JLogger [cluster-rtt-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-00.e7l00.mongodb.net:27017] Opened connection [connectionId{localValue:1, serverValue:1673}] to cluster-poei-shard-00-00.e7l00.mongodb.net:27017
2021-09-20 13:39:18,093 INFO c.m.d.l.SLF4JLogger [cluster-rtt-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-02.e7l00.mongodb.net:27017] Opened connection [connectionId{localValue:6, serverValue:1277}] to cluster-poei-shard-00-02.e7l00.mongodb.net:27017
2021-09-20 13:39:18,093 INFO c.m.d.l.SLF4JLogger [cluster-rtt-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-01.e7l00.mongodb.net:27017] Opened connection [connectionId{localValue:2, serverValue:1579}] to cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:18,096 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-00.e7l00.mongodb.net:27017] Monitor thread successfully connected to server with description ServerDescription{address=cluster-poei-shard-00-00.e7l00.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=255003200, setName='atlas-iiz451-shard-0', canonicalAddress=cluster-poei-shard-00-00.e7l00.mongodb.net:27017, hosts=[cluster-poei-shard-00-02.e7l00.mongodb.net:27017, cluster-poei-shard-00-01.e7l00.mongodb.net:27017, cluster-poei-shard-00-00.e7l00.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-poei-shard-00-01.e7l00.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='GCP'}, Tag{name='region', value='WESTERN_EUROPE'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=7, topologyVersion=TopologyVersion{processId=614868476dd743f5ef135707, counter=4}, lastWriteDate=Mon Sep 20 13:39:16 CEST 2021, lastUpdateTimeNanos=331672185113200}
2021-09-20 13:39:18,096 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-01.e7l00.mongodb.net:27017] Monitor thread successfully connected to server with description ServerDescription{address=cluster-poei-shard-00-01.e7l00.mongodb.net:27017, type=REPLICA_SET_PRIMARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=255454400, setName='atlas-iiz451-shard-0', canonicalAddress=cluster-poei-shard-00-01.e7l00.mongodb.net:27017, hosts=[cluster-poei-shard-00-02.e7l00.mongodb.net:27017, cluster-poei-shard-00-01.e7l00.mongodb.net:27017, cluster-poei-shard-00-00.e7l00.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-poei-shard-00-01.e7l00.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='GCP'}, Tag{name='region', value='WESTERN_EUROPE'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=7fffffff00000000000000d1, setVersion=7, topologyVersion=TopologyVersion{processId=61486961c83b7ac3a9db4d0e, counter=6}, lastWriteDate=Mon Sep 20 13:39:16 CEST 2021, lastUpdateTimeNanos=331672185113400}
2021-09-20 13:39:18,096 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-02.e7l00.mongodb.net:27017] Monitor thread successfully connected to server with description ServerDescription{address=cluster-poei-shard-00-02.e7l00.mongodb.net:27017, type=REPLICA_SET_SECONDARY, state=CONNECTED, ok=true, minWireVersion=0, maxWireVersion=9, maxDocumentSize=16777216, logicalSessionTimeoutMinutes=30, roundTripTimeNanos=255444500, setName='atlas-iiz451-shard-0', canonicalAddress=cluster-poei-shard-00-02.e7l00.mongodb.net:27017, hosts=[cluster-poei-shard-00-02.e7l00.mongodb.net:27017, cluster-poei-shard-00-01.e7l00.mongodb.net:27017, cluster-poei-shard-00-00.e7l00.mongodb.net:27017], passives=[], arbiters=[], primary='cluster-poei-shard-00-01.e7l00.mongodb.net:27017', tagSet=TagSet{[Tag{name='nodeType', value='ELECTABLE'}, Tag{name='provider', value='GCP'}, Tag{name='region', value='WESTERN_EUROPE'}, Tag{name='workloadType', value='OPERATIONAL'}]}, electionId=null, setVersion=7, topologyVersion=TopologyVersion{processId=61486a72f280950b885979fc, counter=3}, lastWriteDate=Mon Sep 20 13:39:16 CEST 2021, lastUpdateTimeNanos=331672185113300}
2021-09-20 13:39:18,097 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-01.e7l00.mongodb.net:27017] Setting max election id to 7fffffff00000000000000d1 from replica set primary cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:18,097 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-01.e7l00.mongodb.net:27017] Setting max set version to 7 from replica set primary cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:18,097 INFO c.m.d.l.SLF4JLogger [cluster-ClusterId{value='614872e4abf8fd7ab588326d', description='null'}-cluster-poei-shard-00-01.e7l00.mongodb.net:27017] Discovered replica set primary cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:18,406 INFO c.m.d.l.SLF4JLogger [main] Opened connection [connectionId{localValue:7, serverValue:1591}] to cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:18,497 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Recipe for index information.
2021-09-20 13:39:18,497 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Stock for index information.
2021-09-20 13:39:18,497 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.IngredientRecipe for index information.
2021-09-20 13:39:18,497 DEBUG o.s.d.m.c.i.MongoPersistentEntityIndexCreator [main] Analyzing class class com.filrouge.restaurantcore.entity.Ingredient for index information.
2021-09-20 13:39:18,616 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IAddressRepository…
2021-09-20 13:39:18,656 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,700 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IBookingRepository…
2021-09-20 13:39:18,736 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,752 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IOrderRepository…
2021-09-20 13:39:18,756 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,781 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IIngredientRepository…
2021-09-20 13:39:18,785 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,805 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IIngredientRecipeRepository…
2021-09-20 13:39:18,809 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,841 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IPurchaseRepository…
2021-09-20 13:39:18,857 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,877 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IRecipeRepository…
2021-09-20 13:39:18,881 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,902 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IRestaurantRepository…
2021-09-20 13:39:18,906 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,922 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IUserRepository…
2021-09-20 13:39:18,926 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,939 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IStockRepository…
2021-09-20 13:39:18,943 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,955 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.ITableRepository…
2021-09-20 13:39:18,959 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:18,979 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.IRoleRepository…
2021-09-20 13:39:18,983 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:19,366 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Locale to class java.lang.String as writing converter.
2021-09-20 13:39:19,366 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Character to class java.lang.String as writing converter.
2021-09-20 13:39:19,369 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigDecimal to class java.lang.String as writing converter.
2021-09-20 13:39:19,369 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigDecimal to class org.bson.types.Decimal128 as writing converter.
2021-09-20 13:39:19,369 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.math.BigDecimal as reading converter.
2021-09-20 13:39:19,369 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.types.Decimal128 to class java.math.BigDecimal as reading converter.
2021-09-20 13:39:19,369 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.math.BigInteger to class java.lang.String as writing converter.
2021-09-20 13:39:19,369 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.math.BigInteger as reading converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.net.URL to class java.lang.String as writing converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.net.URL as reading converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class java.lang.String as reading converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.query.Term to class java.lang.String as writing converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.script.NamedMongoScript to class org.bson.Document as writing converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.script.NamedMongoScript as reading converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Currency to class java.lang.String as writing converter.
2021-09-20 13:39:19,370 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.util.Currency as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.concurrent.atomic.AtomicInteger to class java.lang.Integer as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.concurrent.atomic.AtomicLong to class java.lang.Long as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Long to class java.util.concurrent.atomic.AtomicLong as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.Integer to class java.util.concurrent.atomic.AtomicInteger as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.types.Binary to class [B as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.BsonTimestamp to class java.time.Instant as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.net.URI as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.net.URI to class java.lang.String as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Box to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Polygon to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Circle to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.Sphere to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Box as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Polygon as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Circle as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.Sphere as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.geo.Point as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.geo.Point to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.query.GeoCommand to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from interface org.springframework.data.mongodb.core.geo.GeoJson to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPoint to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.springframework.data.mongodb.core.geo.GeoJsonPolygon to class org.bson.Document as writing converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPoint as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonPolygon as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonLineString as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiLineString as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPoint as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonMultiPolygon as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to class org.springframework.data.mongodb.core.geo.GeoJsonGeometryCollection as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class org.bson.Document to interface org.springframework.data.mongodb.core.geo.GeoJson as reading converter.
2021-09-20 13:39:19,371 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalDateTime as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalDateTime to class java.util.Date as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalDate as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalDate to class java.util.Date as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.LocalTime as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.LocalTime to class java.util.Date as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.util.Date to class java.time.Instant as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Instant to class java.util.Date as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Skipping converter from class java.time.LocalDateTime to class java.time.Instant as reading converter. class java.time.LocalDateTime is not a store supported simple type!
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Skipping converter from class java.time.Instant to class java.time.LocalDateTime as reading converter. class java.time.Instant is not a store supported simple type!
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.ZoneId to class java.lang.String as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.ZoneId as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Duration to class java.lang.String as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Duration as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.time.Period to class java.lang.String as writing converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Period as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.LocalDate as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.LocalDateTime as reading converter.
2021-09-20 13:39:19,375 DEBUG o.s.d.c.CustomConversions [main] Adding converter from class java.lang.String to class java.time.Instant as reading converter.
2021-09-20 13:39:19,395 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Initializing repository instance for com.filrouge.restaurantcore.dao.ICoordinatesRepository…
2021-09-20 13:39:19,399 DEBUG o.s.d.r.c.s.RepositoryFactorySupport [main] Finished creation of repository instance for {}.
2021-09-20 13:39:19,435 INFO o.a.j.l.DirectJDKLog [main] Starting ProtocolHandler ["http-nio-8080"]
2021-09-20 13:39:19,455 INFO o.s.b.w.e.t.TomcatWebServer [main] Tomcat started on port(s): 8080 (http) with context path '/backend-filrouge'
2021-09-20 13:39:19,463 INFO o.s.b.StartupInfoLogger [main] Started RestaurantCoreApplication in 5.426 seconds (JVM running for 6.876)
2021-09-20 13:39:26,485 INFO o.a.j.l.DirectJDKLog [http-nio-8080-exec-1] Initializing Spring DispatcherServlet 'dispatcherServlet'
2021-09-20 13:39:26,485 INFO o.s.w.s.FrameworkServlet [http-nio-8080-exec-1] Initializing Servlet 'dispatcherServlet'
2021-09-20 13:39:26,487 INFO o.s.w.s.FrameworkServlet [http-nio-8080-exec-1] Completed initialization in 2 ms
2021-09-20 13:39:26,626 DEBUG o.s.d.m.r.q.MongoQueryCreator [http-nio-8080-exec-1] Created query Query: { "lastName" : "c", "password" : "c"}, Fields: {}, Sort: {}
2021-09-20 13:39:26,638 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] find using query: { "lastname" : "c", "password" : "c"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:26,700 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:34:53.820+0200, updateDate=2021-09-20T13:34:53.820+0200})
2021-09-20 13:39:26,772 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:34:53.820+0200, updateDate=2021-09-20T13:34:53.820+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:26,780 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findByLastNameAndPassword(String,String) s'est terminé.
2021-09-20 13:39:28,770 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.Restaurant in collection: restaurant
2021-09-20 13:39:28,811 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de List com.filrouge.restaurantcore.service.impl.RestaurantServiceImpl.findAll() s'est terminé.
2021-09-20 13:39:29,562 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:29,573 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:29,573 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:29,573 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-3] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:29,573 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-4] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:29,602 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:29,642 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:29,646 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:29,695 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:29,699 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:34:53.820+0200, updateDate=2021-09-20T13:34:53.820+0200})
2021-09-20 13:39:29,739 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:34:53.820+0200, updateDate=2021-09-20T13:34:53.820+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:29,743 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:39:29,758 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:29,760 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-6] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:29,760 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:29,760 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-7] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:29,797 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:29,840 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:29,840 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:29,882 INFO c.m.d.l.SLF4JLogger [http-nio-8080-exec-3] Opened connection [connectionId{localValue:9, serverValue:1630}] to cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:29,882 INFO c.m.d.l.SLF4JLogger [http-nio-8080-exec-4] Opened connection [connectionId{localValue:8, serverValue:1620}] to cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:29,918 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:29,918 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:29,964 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:29,964 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:29,972 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:29,973 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:30,046 INFO c.m.d.l.SLF4JLogger [http-nio-8080-exec-7] Opened connection [connectionId{localValue:10, serverValue:1414}] to cluster-poei-shard-00-01.e7l00.mongodb.net:27017
2021-09-20 13:39:30,095 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:30,136 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:30,139 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:32,449 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:32,450 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-8] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:32,490 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:34:53.820+0200, updateDate=2021-09-20T13:34:53.820+0200})
2021-09-20 13:39:32,531 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:34:53.820+0200, updateDate=2021-09-20T13:34:53.820+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:32,539 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:32,549 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:39:32,549 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:39:32,646 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:39:32,650 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:39:32,664 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:32,704 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:32,744 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:32,744 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:32,784 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:32,784 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:39:32,830 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:32,834 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:39:32,849 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:32,849 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-10] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:32,858 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:32,858 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:32,858 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:32,891 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:32,895 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:32,895 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:32,931 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:32,931 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:32,935 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:32,935 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:32,938 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:32,938 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:32,977 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:32,977 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:39:33,018 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:33,022 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:39:33,040 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:33,041 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-5] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:33,044 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:39:33,044 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-6] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:39:33,080 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:39:33,084 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:39:33,120 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:39:33,120 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:39:33,125 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:39:33,125 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:27,577 DEBUG o.s.d.m.r.q.MongoQueryCreator [http-nio-8080-exec-4] Created query Query: { "lastName" : "c", "password" : "c"}, Fields: {}, Sort: {}
2021-09-20 13:40:27,578 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] find using query: { "lastname" : "c", "password" : "c"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:27,617 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:40:27,656 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:27,656 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findByLastNameAndPassword(String,String) s'est terminé.
2021-09-20 13:40:29,735 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.Restaurant in collection: restaurant
2021-09-20 13:40:29,775 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de List com.filrouge.restaurantcore.service.impl.RestaurantServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:30,829 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:30,833 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-8] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:30,835 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:30,835 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:30,835 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-9] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:30,871 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:30,875 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:30,875 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:30,918 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:30,918 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:30,918 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:30,918 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:30,918 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:30,918 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:30,959 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:30,959 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:40:31,004 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:31,004 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:31,015 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:31,019 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:31,019 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:31,023 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-2] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:31,056 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:31,060 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:31,096 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:31,101 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:31,101 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:31,102 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:32,938 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:32,942 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-5] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:32,980 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200})
2021-09-20 13:40:33,021 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:39:32.539+0200, updateDate=2021-09-20T13:39:32.539+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:33,021 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:33,025 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200})
2021-09-20 13:40:33,025 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:40:33,081 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200})
2021-09-20 13:40:33,085 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:40:33,097 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:33,138 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:33,180 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:33,180 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:33,221 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:33,221 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200})
2021-09-20 13:40:33,261 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:33,261 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:33,277 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:33,277 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-4] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:33,280 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:33,317 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:33,317 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:33,357 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:33,357 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:33,357 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:33,357 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:33,398 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:33,398 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200})
2021-09-20 13:40:33,439 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:33,439 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:33,456 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:33,456 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-7] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:33,498 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:33,538 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:33,538 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:38,203 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:38,207 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-8] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:38,243 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200})
2021-09-20 13:40:38,284 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:33.021+0200, updateDate=2021-09-20T13:40:33.021+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:38,284 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:38,284 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200})
2021-09-20 13:40:38,288 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:40:38,331 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200})
2021-09-20 13:40:38,331 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:40:38,343 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:38,384 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:38,425 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:38,425 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:38,463 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:38,463 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200})
2021-09-20 13:40:38,505 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:38,505 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:38,519 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:38,559 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:38,600 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:38,600 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:38,641 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:38,641 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200})
2021-09-20 13:40:38,710 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:38,710 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:42,755 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:42,757 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:42,796 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200})
2021-09-20 13:40:42,836 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:38.284+0200, updateDate=2021-09-20T13:40:38.284+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:42,836 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:42,836 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200})
2021-09-20 13:40:42,840 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:40:42,885 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200})
2021-09-20 13:40:42,885 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:40:42,897 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:42,933 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:42,974 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:42,974 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:43,015 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:43,015 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200})
2021-09-20 13:40:43,056 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:43,056 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:43,072 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:43,113 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:43,152 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:43,152 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:43,193 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:43,193 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200})
2021-09-20 13:40:43,231 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:43,235 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:59,026 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:59,031 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-6] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:59,068 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200})
2021-09-20 13:40:59,110 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:40:42.836+0200, updateDate=2021-09-20T13:40:42.836+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:40:59,110 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:59,110 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200})
2021-09-20 13:40:59,114 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:40:59,155 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200})
2021-09-20 13:40:59,159 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.addFriends(String,String) s'est terminé.
2021-09-20 13:40:59,167 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:59,206 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:59,246 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:59,250 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:59,290 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:59,290 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200})
2021-09-20 13:40:59,331 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:59,331 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:59,341 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:59,341 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-3] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:59,347 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:59,384 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:59,384 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:59,423 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:59,423 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:40:59,423 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:59,423 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:40:59,464 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:40:59,464 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200})
2021-09-20 13:40:59,504 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:40:59,504 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:40:59,525 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:40:59,525 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-8] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:40:59,562 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:40:59,602 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:40:59,602 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:00,836 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:00,837 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-9] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:00,875 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200})
2021-09-20 13:41:00,916 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:40:59.110+0200, updateDate=2021-09-20T13:40:59.110+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:41:00,916 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:00,916 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200})
2021-09-20 13:41:00,916 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:41:00,961 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200})
2021-09-20 13:41:00,964 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.addFriends(String,String) s'est terminé.
2021-09-20 13:41:00,976 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:01,014 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:01,052 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:01,056 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:01,100 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:01,100 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200})
2021-09-20 13:41:01,140 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:01,140 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:41:01,153 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:01,157 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:01,159 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:01,160 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:01,168 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-2] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:01,196 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:01,208 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:01,208 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:01,236 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:01,236 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:01,248 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:01,248 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:01,248 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:01,248 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:01,288 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:01,288 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200})
2021-09-20 13:41:01,328 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:01,328 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:41:01,343 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:01,343 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-6] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:01,343 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:01,347 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-4] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:01,380 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:01,384 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:01,420 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:01,420 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:01,424 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:01,424 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:33,108 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:33,111 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-3] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:33,152 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200})
2021-09-20 13:41:33,192 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:00.916+0200, updateDate=2021-09-20T13:41:00.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:33,192 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:33,192 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200})
2021-09-20 13:41:33,192 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:41:33,252 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200})
2021-09-20 13:41:33,256 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:41:33,268 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:33,308 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:33,356 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:33,356 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:33,396 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:33,396 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200})
2021-09-20 13:41:33,439 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:33,439 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:41:33,455 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:33,457 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-8] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:33,457 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:33,494 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:33,499 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:33,532 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:33,532 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:33,547 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:33,547 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:33,586 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:33,586 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200})
2021-09-20 13:41:33,626 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:33,626 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:41:33,644 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:33,644 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-10] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:33,680 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:33,722 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:33,722 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:41:36,572 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:36,573 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:41:36,624 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200})
2021-09-20 13:41:36,678 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:41:33.192+0200, updateDate=2021-09-20T13:41:33.192+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:36,678 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:41:36,678 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200})
2021-09-20 13:41:36,678 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:41:36,730 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200})
2021-09-20 13:41:36,730 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:41:36,738 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:36,786 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:36,824 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:36,824 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:36,864 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:36,868 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200})
2021-09-20 13:41:36,912 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:41:36,912 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:41:36,927 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:41:36,967 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:41:37,012 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:41:37,012 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:41:37,138 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:41:37,138 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200})
2021-09-20 13:41:37,178 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:41:37,178 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:44:34,879 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:34,881 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-7] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:44:34,920 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200})
2021-09-20 13:44:34,960 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:41:36.678+0200, updateDate=2021-09-20T13:41:36.678+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:44:34,960 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:44:34,960 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200})
2021-09-20 13:44:34,960 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:44:35,006 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200})
2021-09-20 13:44:35,006 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:44:35,023 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:35,062 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:44:35,106 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:44:35,106 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:44:35,189 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:44:35,189 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200})
2021-09-20 13:44:35,226 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:44:35,226 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:44:35,246 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:35,299 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:44:35,339 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:44:35,339 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:44:35,379 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:44:35,379 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200})
2021-09-20 13:44:35,426 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:44:35,426 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:44:54,835 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:54,836 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-10] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:44:54,876 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200})
2021-09-20 13:44:54,915 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:44:34.960+0200, updateDate=2021-09-20T13:44:34.960+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:44:54,916 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:44:54,916 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:44:54,917 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:44:54,964 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:44:54,965 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.addFriends(String,String) s'est terminé.
2021-09-20 13:44:54,975 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:55,014 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:44:55,052 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:44:55,053 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:44:55,095 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:44:55,096 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:44:55,136 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:44:55,137 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:44:55,151 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:55,152 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-2] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:44:55,155 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:55,197 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:44:55,199 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:44:55,236 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:44:55,237 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:44:55,238 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:44:55,239 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:44:55,295 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:44:55,296 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:44:55,334 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:44:55,335 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:44:55,346 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:44:55,347 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-6] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:44:55,386 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:44:55,427 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:44:55,427 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:18,565 DEBUG o.s.d.m.r.q.MongoQueryCreator [http-nio-8080-exec-7] Created query Query: { "lastName" : "c", "password" : "c"}, Fields: {}, Sort: {}
2021-09-20 13:46:18,569 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] find using query: { "lastname" : "c", "password" : "c"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:18,606 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:46:18,737 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:46:18,737 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findByLastNameAndPassword(String,String) s'est terminé.
2021-09-20 13:46:19,854 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.Restaurant in collection: restaurant
2021-09-20 13:46:19,895 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de List com.filrouge.restaurantcore.service.impl.RestaurantServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:21,842 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:21,843 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-9] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:21,845 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:21,879 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:21,883 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:21,923 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:21,923 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:21,923 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:21,923 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:21,962 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:21,966 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:46:22,006 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:46:22,006 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:22,019 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:22,019 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:22,072 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:22,113 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:22,113 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:29,004 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:29,006 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-2] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:29,048 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200})
2021-09-20 13:46:29,087 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:44:54.916+0200, updateDate=2021-09-20T13:44:54.916+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:46:29,087 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:46:29,087 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200})
2021-09-20 13:46:29,091 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:46:29,136 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200})
2021-09-20 13:46:29,136 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:46:29,148 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:29,196 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:29,239 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:29,239 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:29,280 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:29,280 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200})
2021-09-20 13:46:29,325 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:46:29,325 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:29,341 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:29,385 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:29,428 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:29,428 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:29,471 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:29,471 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200})
2021-09-20 13:46:29,515 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:46:29,515 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:54,257 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:54,260 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-4] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:54,298 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200})
2021-09-20 13:46:54,336 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:46:29.087+0200, updateDate=2021-09-20T13:46:29.087+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:46:54,336 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:54,336 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200})
2021-09-20 13:46:54,336 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:46:54,382 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200})
2021-09-20 13:46:54,382 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.addFriends(String,String) s'est terminé.
2021-09-20 13:46:54,394 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:54,435 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:54,473 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:54,473 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:54,514 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:54,514 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200})
2021-09-20 13:46:54,551 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:54,551 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:54,569 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:54,569 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-7] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:54,569 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:54,609 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:54,609 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:54,646 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:54,650 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:54,650 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:54,650 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:54,689 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:54,689 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200})
2021-09-20 13:46:54,729 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:54,729 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:54,745 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:54,745 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-9] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:54,782 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:54,822 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:54,826 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:56,258 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:56,260 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-10] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:56,366 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200})
2021-09-20 13:46:56,405 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:46:54.336+0200, updateDate=2021-09-20T13:46:54.336+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:56,405 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:46:56,405 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200})
2021-09-20 13:46:56,405 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:46:56,475 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200})
2021-09-20 13:46:56,475 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.addFriends(String,String) s'est terminé.
2021-09-20 13:46:56,486 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:56,628 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:56,978 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:56,978 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:57,254 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:57,256 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200})
2021-09-20 13:46:57,296 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:46:57,300 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:57,314 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:57,314 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-2] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:57,314 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:57,314 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-5] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:57,320 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:57,353 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:57,353 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:57,357 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:57,393 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:57,393 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:57,393 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:57,393 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:57,397 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:57,397 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:57,435 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:57,439 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200})
2021-09-20 13:46:57,475 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:46:57,475 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:46:57,491 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:57,495 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-4] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:57,501 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:46:57,501 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-3] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:46:57,533 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:46:57,537 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:46:57,574 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:46:57,574 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:46:57,578 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:46:57,578 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:47:00,729 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:00,733 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-7] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:47:00,784 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200})
2021-09-20 13:47:00,927 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:46:56.405+0200, updateDate=2021-09-20T13:46:56.405+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436, 614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:47:00,927 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:47:00,927 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200})
2021-09-20 13:47:00,927 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:47:00,988 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200})
2021-09-20 13:47:00,988 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:47:00,997 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:01,037 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:47:01,075 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:47:01,075 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:47:01,124 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:47:01,124 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200})
2021-09-20 13:47:01,177 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:47:01,180 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:47:01,192 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:01,192 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-9] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:47:01,196 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:01,234 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:47:01,236 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:47:01,274 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-9] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:47:01,274 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:47:01,274 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:47:01,274 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:47:01,319 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:47:01,319 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200})
2021-09-20 13:47:01,366 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:47:01,370 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:47:01,379 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "614857860dc5ce0adb7ea435"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:01,384 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "614857860dc5ce0adb7ea435"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:47:01,423 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:47:01,460 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:47:01,464 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:47:04,212 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:04,214 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-2] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:47:04,518 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200})
2021-09-20 13:47:04,819 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435], bookings=[], createdDate=2021-09-20T13:47:00.927+0200, updateDate=2021-09-20T13:47:00.927+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435], bookings=[]))
2021-09-20 13:47:04,819 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:47:04,819 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:47:04,823 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:47:04,992 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:47:04,992 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:47:05,004 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:05,043 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:47:05,083 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:47:05,083 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:47:05,120 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:47:05,124 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:47:05,161 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:47:05,161 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:47:05,173 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:47:05,212 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:47:05,250 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:47:05,252 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:47:05,291 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:47:05,291 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:47:05,327 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:47:05,331 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:48:34,128 DEBUG o.s.d.m.r.q.MongoQueryCreator [http-nio-8080-exec-8] Created query Query: { "lastName" : "c", "password" : "c"}, Fields: {}, Sort: {}
2021-09-20 13:48:34,129 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] find using query: { "lastname" : "c", "password" : "c"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:34,174 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:48:34,230 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:48:34,231 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findByLastNameAndPassword(String,String) s'est terminé.
2021-09-20 13:48:35,308 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-9] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.Restaurant in collection: restaurant
2021-09-20 13:48:35,365 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-9] Le traitement de List com.filrouge.restaurantcore.service.impl.RestaurantServiceImpl.findAll() s'est terminé.
2021-09-20 13:48:36,068 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-10] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:36,113 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:48:36,159 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:36,160 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:36,204 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:36,205 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:48:36,244 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-10] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:48:36,245 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-10] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:48:38,050 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:38,051 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-1] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:48:38,090 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200})
2021-09-20 13:48:38,129 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:47:04.819+0200, updateDate=2021-09-20T13:47:04.819+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:48:38,130 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:38,131 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200})
2021-09-20 13:48:38,131 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-1] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:48:38,175 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-1] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200})
2021-09-20 13:48:38,176 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-1] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.addFriends(String,String) s'est terminé.
2021-09-20 13:48:38,188 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-2] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:38,226 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:48:38,265 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:38,266 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:38,305 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:38,305 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200})
2021-09-20 13:48:38,344 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-2] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:38,345 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-2] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:48:38,359 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-5] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:38,360 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-5] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:48:38,364 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-6] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:38,399 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:38,401 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:48:38,439 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-5] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:38,440 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-5] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:48:38,440 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:38,441 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:38,480 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:38,481 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200})
2021-09-20 13:48:38,519 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-6] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:38,520 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-6] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:48:38,548 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-4] findOne using query: { "id" : "614859c80dc5ce0adb7ea436"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:38,549 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-4] findOne using query: { "_id" : { "$oid" : "614859c80dc5ce0adb7ea436"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:48:38,587 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:38,628 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-4] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:38,629 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-4] Le traitement de Optional com.filrouge.restaurantcore.service.impl.UserServiceImpl.findById(String) s'est terminé.
2021-09-20 13:48:39,845 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] findOne using query: { "id" : "61486fef0dc5ce0adb7ea437"} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:39,847 DEBUG o.s.d.m.c.MongoTemplate$FindOneCallback [http-nio-8080-exec-3] findOne using query: { "_id" : { "$oid" : "61486fef0dc5ce0adb7ea437"}} fields: {} in db.collection: filrouge.user
2021-09-20 13:48:39,885 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200})
2021-09-20 13:48:39,925 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T13:48:38.130+0200, updateDate=2021-09-20T13:48:38.130+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:39,926 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeConvert(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:48:39,927 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onBeforeSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:48:39.926+0200, updateDate=2021-09-20T13:48:39.926+0200})
2021-09-20 13:48:39,927 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-3] Saving Document containing fields: [_id, firstname, lastname, password, email, restaurants, roles, friends, bookings, createdDate, updateDate]
2021-09-20 13:48:39,970 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-3] onAfterSave(User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]), {_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:48:39.926+0200, updateDate=2021-09-20T13:48:39.926+0200})
2021-09-20 13:48:39,971 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-3] Le traitement de UserDto com.filrouge.restaurantcore.service.impl.UserServiceImpl.removeFriends(String,String) s'est terminé.
2021-09-20 13:48:39,982 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-7] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:40,021 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:48:40,062 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:40,063 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:40,102 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:40,103 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:48:39.926+0200, updateDate=2021-09-20T13:48:39.926+0200})
2021-09-20 13:48:40,141 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-7] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:48:39.926+0200, updateDate=2021-09-20T13:48:39.926+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:48:40,142 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-7] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
2021-09-20 13:48:40,157 DEBUG o.s.d.m.c.MongoTemplate [http-nio-8080-exec-8] find using query: {} fields: {} for class: class com.filrouge.restaurantcore.entity.User in collection: user
2021-09-20 13:48:40,195 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200})
2021-09-20 13:48:40,236 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614857860dc5ce0adb7ea435, firstname=b, lastname=b, password=b, email=b, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614859c80dc5ce0adb7ea436], bookings=[], createdDate=2021-09-20T11:57:03.352+0200, updateDate=2021-09-20T11:57:03.352+0200}, User(firstName=b, lastName=b, password=b, restaurantId=null, email=b, restaurants=[], roles=[Role(name=Client)], friends=[614859c80dc5ce0adb7ea436], bookings=[]))
2021-09-20 13:48:40,237 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200})
2021-09-20 13:48:40,275 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=614859c80dc5ce0adb7ea436, firstname=a, lastname=a, password=a, email=a, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[], createdDate=2021-09-20T13:31:53.498+0200, updateDate=2021-09-20T13:31:53.498+0200}, User(firstName=a, lastName=a, password=a, restaurantId=null, email=a, restaurants=[], roles=[Role(name=Client)], friends=[614857860dc5ce0adb7ea435, 61486fef0dc5ce0adb7ea437], bookings=[]))
2021-09-20 13:48:40,276 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterLoad({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:48:39.926+0200, updateDate=2021-09-20T13:48:39.926+0200})
2021-09-20 13:48:40,317 DEBUG o.s.d.m.c.m.e.AbstractMongoEventListener [http-nio-8080-exec-8] onAfterConvert({_id=61486fef0dc5ce0adb7ea437, firstname=c, lastname=c, password=c, email=c, restaurants=[], roles=[{ "$ref" : "role", "$id" : "6148531aa6b2d07fe12c9833" }], friends=[], bookings=[], createdDate=2021-09-20T13:48:39.926+0200, updateDate=2021-09-20T13:48:39.926+0200}, User(firstName=c, lastName=c, password=c, restaurantId=null, email=c, restaurants=[], roles=[Role(name=Client)], friends=[], bookings=[]))
2021-09-20 13:48:40,318 ERROR c.f.r.a.AfterServiceAOP [http-nio-8080-exec-8] Le traitement de List com.filrouge.restaurantcore.service.impl.UserServiceImpl.findAll() s'est terminé.
